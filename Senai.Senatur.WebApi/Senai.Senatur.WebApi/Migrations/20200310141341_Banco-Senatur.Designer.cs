// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Senai.Senatur.WebApi.Context;

namespace Senai.Senatur.WebApi.Migrations
{
    [DbContext(typeof(SenaturContext))]
    [Migration("20200310141341_Banco-Senatur")]
    partial class BancoSenatur
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.14-servicing-32113")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Senai.Senatur.WebApi.Domains.Cidades", b =>
                {
                    b.Property<int>("Id_Cidade")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasColumnType("VARCHAR(150)")
                        .HasMaxLength(150);

                    b.Property<string>("NomeCidade")
                        .IsRequired()
                        .HasColumnType("VARCHAR(150)")
                        .HasMaxLength(150);

                    b.HasKey("Id_Cidade");

                    b.HasIndex("NomeCidade")
                        .IsUnique();

                    b.ToTable("Cidades");

                    b.HasData(
                        new { Id_Cidade = 1, Estado = "Bahia", NomeCidade = "Salvador" },
                        new { Id_Cidade = 2, Estado = "Mato Grosso do sul", NomeCidade = "Bonito" }
                    );
                });

            modelBuilder.Entity("Senai.Senatur.WebApi.Domains.Pacotes", b =>
                {
                    b.Property<int>("Id_Pacote")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Ativo")
                        .HasColumnType("BIT");

                    b.Property<DateTime>("DataIda")
                        .HasColumnType("DATE");

                    b.Property<DateTime>("DataVolta")
                        .HasColumnType("DATE");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("NVARCHAR(MAX)")
                        .HasMaxLength(1500);

                    b.Property<int>("Fk_NomeCidade");

                    b.Property<string>("NomePacote")
                        .IsRequired()
                        .HasColumnType("VARCHAR (100)")
                        .HasMaxLength(100);

                    b.Property<decimal>("Valor")
                        .HasColumnName("Preco")
                        .HasColumnType("DECIMAL (18,2)");

                    b.HasKey("Id_Pacote");

                    b.HasIndex("Fk_NomeCidade");

                    b.ToTable("Pacotes");

                    b.HasData(
                        new { Id_Pacote = 1, Ativo = true, DataIda = new DateTime(2020, 8, 6, 0, 0, 0, 0, DateTimeKind.Unspecified), DataVolta = new DateTime(2020, 8, 10, 0, 0, 0, 0, DateTimeKind.Unspecified), Descricao = "O que não falta em Salvador são atrações.Prova disso são as praias, os museus e as construções seculares que dão um charme mais que especial à região.A cidade, sinônimo de alegria, também é conhecida pela efervescência cultural que a credenciou como um dos destinos mais procurados por turistas brasileiros e estrangeiros.O Pelourinho e o Elevador são alguns dos principais pontos de visitação.", Fk_NomeCidade = 1, NomePacote = "SALVADOR - 5 DIAS / 4 DIÁRIAS", Valor = 854.00m },
                        new { Id_Pacote = 2, Ativo = true, DataIda = new DateTime(2020, 5, 14, 0, 0, 0, 0, DateTimeKind.Unspecified), DataVolta = new DateTime(2020, 5, 18, 0, 0, 0, 0, DateTimeKind.Unspecified), Descricao = "O Litoral Norte da Bahia conta com inúmeras praias emolduradas por coqueiros, além de piscinas naturais de águas mornas que são protegidas por recifes e habitadas por peixes coloridos. Banhos de mar em águas calmas ou agitadas, mergulho com snorkel, caminhada pela orla e calçadões, passeios de bicicleta, pontos turísticos históricos, interação com animais e até baladas estão entre as atrações da região. Destacam-se as praias de Guarajuba, Imbassaí, Praia do Forte e Costa do Sauipe.", Fk_NomeCidade = 1, NomePacote = "RESORTS NA BAHIA - LITORAL NORTE - 5 DIAS / 4 DIÁRIAS", Valor = 1826.00m },
                        new { Id_Pacote = 3, Ativo = false, DataIda = new DateTime(2020, 3, 28, 0, 0, 0, 0, DateTimeKind.Unspecified), DataVolta = new DateTime(2020, 4, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), Descricao = "Localizado no estado de Mato Grosso do Sul e ao sul do Pantanal, Bonito possui centenas de cachoeiras, rios e lagos de águas cristalinas, além de cavernas inundadas, paredões rochosos e uma infinidade de peixes. Os aventureiros costumam render-se facilmente a esse destino regado por trilhas ecológicas, passeios de bote e descidas de rapel pelas inúmeras quedas d'água da região", Fk_NomeCidade = 2, NomePacote = "BONITO VIA CAMPO GRANDE - 1 PASSEIO - 5 DIAS / 4 DIÁRIAS", Valor = 1004.00m }
                    );
                });

            modelBuilder.Entity("Senai.Senatur.WebApi.Domains.TiposUsuario", b =>
                {
                    b.Property<int>("Id_TipoUsuario")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Titulo")
                        .IsRequired()
                        .HasColumnType("VARCHAR (100)")
                        .HasMaxLength(100);

                    b.HasKey("Id_TipoUsuario");

                    b.HasIndex("Titulo")
                        .IsUnique();

                    b.ToTable("TiposUsuario");

                    b.HasData(
                        new { Id_TipoUsuario = 1, Titulo = "Administrador" },
                        new { Id_TipoUsuario = 2, Titulo = "Cliente" }
                    );
                });

            modelBuilder.Entity("Senai.Senatur.WebApi.Domains.Usuarios", b =>
                {
                    b.Property<int>("Id_Usuario")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnName("VARCHAR(150)")
                        .HasMaxLength(150);

                    b.Property<int>("Fk_TipoUsuario");

                    b.Property<string>("Senha")
                        .IsRequired()
                        .HasColumnName("VARCHAR(30)")
                        .HasMaxLength(30);

                    b.HasKey("Id_Usuario");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.HasIndex("Fk_TipoUsuario");

                    b.ToTable("Usuarios");

                    b.HasData(
                        new { Id_Usuario = 1, Email = "admin@admin.com", Fk_TipoUsuario = 1, Senha = "admin" },
                        new { Id_Usuario = 2, Email = "cliente@cliente.com", Fk_TipoUsuario = 2, Senha = "cliente" }
                    );
                });

            modelBuilder.Entity("Senai.Senatur.WebApi.Domains.Pacotes", b =>
                {
                    b.HasOne("Senai.Senatur.WebApi.Domains.Cidades", "Cidade")
                        .WithMany("PacotesnaCidade")
                        .HasForeignKey("Fk_NomeCidade")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Senai.Senatur.WebApi.Domains.Usuarios", b =>
                {
                    b.HasOne("Senai.Senatur.WebApi.Domains.TiposUsuario", "TipoUsuario")
                        .WithMany()
                        .HasForeignKey("Fk_TipoUsuario")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
